/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define MOD 1
#define MEDIA 2
#define CODE 3

&sl {
    release-after-ms = <250>; // After key release, hold for 250ms
};

&soft_off {
    hold-time-ms = <1>; // Turn off keyboard after holding for 1ms
};

/ {
    macros {
        lk_lay: lock_layer {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&macro_tap &kp K_CANCEL>
                , <&macro_param_1to1>
                , <&tog MACRO_PLACEHOLDER>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
            cmb_star {
                timeout-ms = <50>;
                key-positions = <28 29>;
                bindings = <&kp STAR>;
            };

            cmb_fslh {
                timeout-ms = <50>;
                key-positions = <29 30>;
                bindings = <&kp FSLH>;
            };

            // Enables mod layer even with VCC-off
            cmb_layr {
                timeout-ms = <50>;
                key-positions = <27 45>;
                bindings = <&tog MOD>;
            };
    };

    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp F1      &kp F2      &kp F3      &kp F4            &kp F5      &kp F6      &kp F7      &kp F8            &kp F9      &kp F10     &kp F11     &kp F12
                &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS   &kp EQUAL   &kp BSPC    &kp HOME    &kp ENTER   &kp PLUS    &kp MINUS
                &kp TAB     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O       &kp P       &kp LBKT    &kp RBKT    &kp BSLH    &kp END     &kp KP_N7   &kp KP_N8   &kp KP_N9
             &ht LCTRL CAPS &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp APOS        &kp ENTER           &kp DEL     &kp KP_N4   &kp KP_N5   &kp KP_N6
                &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp PERIOD  &kp SLASH       &kp RSHFT                       &kp UP      &kp KP_N1   &kp KP_N2   &kp KP_N3
                &kp LCTRL   &kp LGUI    &kp LALT    &sl MEDIA        &kp SPACE               &kp SPACE          &sl MOD     &kp RALT    &kp K_CMENU &mo MOD     &kp RCTRL   &kp LEFT    &kp DOWN    &kp RIGHT   &kp KP_N0   &kp DOT
            >;
            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        mod_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans            &trans      &trans      &trans      &trans            &trans      &trans &ext_power EP_TOG &soft_off
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &kp PG_UP  &bt BT_CLR   &out OUT_USB &out OUT_BLE
                &trans      &trans      &trans      &kp LPAR    &kp RPAR    &trans      &trans      &kp UNDER   &kp MINUS   &kp EQUAL   &trans      &trans      &trans      &trans      &kp PG_DN  &trans       &trans       &trans
                &trans      &trans      &trans      &kp LBKT    &kp RBKT    &trans      &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans      &trans          &trans              &trans     &bt BT_SEL 3 &bt BT_SEL 4 &trans
                &trans      &trans      &trans      &kp LBRC    &kp RBRC    &trans      &trans      &trans      &trans      &trans      &trans          &trans                          &bt BT_NXT &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2
                &trans      &trans      &trans      &trans           &trans                  &trans             &lk_lay MOD &trans      &trans      &trans      &trans      &bt BT_PRV  &bt BT_PRV &bt BT_NXT   &trans       &trans
            >;
            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        media_layer {
            bindings = <
                &kp C_MUTE  &trans      &trans      &trans      &trans            &trans      &trans      &trans      &trans            &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans          &trans              &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans          &trans                          &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &lk_lay MEDIA    &trans                  &trans             &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        code_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans            &trans      &trans      &trans      &trans            &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans          &trans              &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans          &trans                          &trans    &trans      &trans       &trans
                &trans      &trans      &trans      &trans           &trans                  &trans             &trans      &trans      &trans      &trans      &trans      &trans      &trans    &trans      &trans       &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
